---
version: 2.1

orbs:
  executor-tools: twdps/executor-tools@2.0.0
  op: twdps/onepassword@2.0.2
  do: twdps/pipeline-events@2.0.0

# ================================================================= global pipeline values =

globals:
  - &context empc-lab
  - &shell op run --env-file op.env -- /bin/bash -eo pipefail
  - &registry docker.io

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

# ================================================================= workflows

workflows:
  version: 2

  alpine build:
    jobs:

      - executor-tools/dev-release:
          name: alpine image build
          context: *context
          shell: *shell
          dockerfile: Dockerfile.alpine
          image: twdps/circleci-remote-docker
          tag: alpine-edge
          snyk-scan: true
          snyk-severity-threshold: low
          snyk-organization: twdps
          bats-test: true
          bats-run-container-name: circleci-remote-docker-alpine-edge
          bats-entry-point: /bin/ash
          bats-test-path: test/circleci_remote_docker_alpine.bats
          after-checkout:
            - op/env
          before-build:
            - run:
                name: update CREATED and VERSION in LABELS
                command: |
                  sed -i "s/CREATED/$(date -u +"%Y-%m-%dT%H:%M:%SZ")/g" Dockerfile.alpine
                  sed -i "s/VERSION/${CIRCLE_SHA1}/g" Dockerfile.alpine
          filters: *on-push-main

  #     - executor-tools/machine-executor-dev-release:
  #         name: slim image build
  #         context: *context
  #         registry: *registry
  #         dockerfile: Dockerfile.slim
  #         image: twdps/circleci-remote-docker
  #         tag: slim-edge
  #         bats-test: true
  #         docker-cve-scan: true
  #         severity-threshold: medium
  #         snyk-organization: twdps
  #         test-path: test/circleci_remote_docker_slim.bats
  #         entry-point: /bin/bash
  #         container-name: circleci-remote-docker-slim-edge
  #         after-checkout:
  #           - op/env:
  #               env-file: op.env
  #         before-build:
  #           - run:
  #               name: update CREATED and VERSION in LABELS
  #               command: |
  #                 sed -i "s/CREATED/$(date -u +"%Y-%m-%dT%H:%M:%SZ")/g" Dockerfile.slim
  #                 sed -i "s/VERSION/${CIRCLE_SHA1}/g" Dockerfile.slim
  #         filters: *on-push-main

  # release version:
  #   jobs:

  #     - executor-tools/publish:
  #         name: alpine release
  #         shell: *shell
  #         context: *context
  #         registry: *registry
  #         pull-tag: alpine-edge
  #         tag-annotation: alpine-
  #         image: twdps/circleci-remote-docker
  #         release-tag: alpine-stable
  #         sign-image: true
  #         sbom: true
  #         after-publish:
  #           - run:
  #               name: setup cosign keys
  #               command: |
  #                 op inject -i cosign.key.env -o cosign.key
  #                 op inject -i cosign.pub.env -o cosign.pub
  #         filters: *on-tag-main

  #     - executor-tools/publish:
  #         name: slim release
  #         shell: *shell
  #         context: *context
  #         registry: *registry
  #         pull-tag: slim-edge
  #         tag-annotation: slim-
  #         image: twdps/circleci-remote-docker
  #         release-tag: slim-stable
  #         sign-image: true
  #         sbom: true
  #         after-publish:
  #           - run:
  #               name: setup cosign keys
  #               command: |
  #                 op inject -i cosign.key.env -o cosign.key
  #                 op inject -i cosign.pub.env -o cosign.pub
  #         filters: *on-tag-main

  # release-events:
  #   jobs:
  #     - do/schedule-pipeline:
  #         name: configure weekly trigger
  #         shell: *shell
  #         context: *context
  #         scheduled-pipeline-name: weekly-ci-build
  #         scheduled-pipeline-description: |
  #           Automatically trigger image build on a weekly schedule. Failure of
  #           this recurring build indicates new releases of dependent packages.
  #         hours-of-day: "[1]"
  #         days-of-week: "[\"SUN\"]"
  #         filters: *on-tag-main

  #     - do/release:
  #         name: generate release notes
  #         shell: *shell
  #         context: *context
  #         on-tag: true
  #         filters: *on-tag-main
